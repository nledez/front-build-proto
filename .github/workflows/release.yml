---
name: "Kitsu release"

on:
  push:
    push:
      branches: master
    tags:
      - '*'

jobs:
  make_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: build
        run: |
          set -x
          npm install
          npm run build
          wget https://github.com/cgwire/kitsu/raw/build/index.html
          GIT_COMMIT="$(git rev-parse HEAD)"
          GIT_TAG="$(git describe --tags)"
          KITSU_VERSION="$(echo ${GIT_TAG} | sed 's/^v//;s/-build//')"
          echo "${KITSU_VERSION}" > dist/.version.txt
          echo "${GIT_COMMIT}"    > dist/.commit.txt
          echo "${GIT_TAG}"       > dist/.tag.txt
          CHECKSUM_FILENAME="kitsu-${KITSU_VERSION}.SHA512"
          ARTEFACT_FILENAME="kitsu-${KITSU_VERSION}.tgz"
          tar cvzf "${ARTEFACT_FILENAME}" dist index.html package.json
          sha512sum "${ARTEFACT_FILENAME}" > "${CHECKSUM_FILENAME}"
          mv dist ..
          # echo "==== git checkout build"
          git checkout build
          ls -alrt
          # git pull --rebase origin build
          git reset --hard origin/build
          ls -alrt
          test -d dist && git rm -rf dist
          ls -alrt
          test -d dist && rm -rf dist
          ls -alrt
          mv ../dist .
          ls -alrt
          git add -f dist
          git config --global user.email "no-reply@cg-wire.com"
          git config --global user.name "CGWire bot"
          git commit -m "New release (${KITSU_VERSION})"
          git tag ${KITSU_VERSION}-build
          git push origin build --tag
      - name: release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          artifacts: "kitsu-*.tgz,kitsu-*.SHA512"
          token: ${{ secrets.GITHUB_TOKEN }}
