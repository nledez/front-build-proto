{"version":3,"sources":["webpack:///./src/components/pages/Person.vue?fc2f","webpack:///./src/components/pages/Person.vue?5ce7","webpack:///src/components/pages/Person.vue","webpack:///./src/components/pages/Person.vue?96dc","webpack:///./src/components/pages/Person.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","attrs","person","_e","name","class","isActiveTab","params","person_id","id","_v","_s","$t","tab","displayedPersonDoneTasks","length","on","onSearchChange","saveSearchQuery","sortOptions","model","value","callback","$$v","currentSort","expression","directives","rawName","personTaskSearchQueries","changeSearch","removeSearchQuery","sortedTasks","isTasksLoading","isTasksLoadingError","personTaskSelectionGrid","setPersonTasksScrollPosition","loggablePersonTasks","loggableDoneTasks","personTimeSpentMap","personTimeSpentTotal","personTasksSearchText","onDateChanged","onTimeSpentChange","onSetDayOff","onUnsetDayOff","scheduleItems","tasksStartDate","tasksEndDate","scheduleHeight","nbSelectedTasks","selectedTasks","values","next","staticRenderFns","mixins","format","components","Combobox","PageTitle","PeopleAvatar","Schedule","SearchField","SearchQueryList","TaskInfo","TodosList","TimesheetList","data","activeTab","selectedDate","mounted","updateActiveTab","searchField","setValue","setTimeout","loadPerson","$route","window","addEventListener","resetScheduleHeight","afterDestroy","removeEventListener","$store","commit","computed","displayedPersonTasks","$refs","taskList","haveDoneList","isName","tasks","sort","scheduleTasks","forEach","children","concat","item","rootMap","get","task","project_id","set","taskItem","rootElement","push","rootElements","rootStartDate","rootEndDate","estimation","manDays","Object","assign","startDate","endDate","man_days","methods","$nextTick","buildProjectScheduleItem","avatar","color","colors","priority","expanded","loading","editable","buildTaskScheduleItem","start_date","real_start_date","due_date","clone","add","isBefore","full_entity_name","taskType","unresizable","parentElement","selectTab","setPersonTasksSearch","text","personMap","personId","loadPersonTasks","date","err","console","error","resizeHeaders","selectCurrent","selectDone","searchQuery","search_query","$emit","savePersonTasksSearch","removePersonTasksSearch","availableTabs","includes","timeSpentInfo","setTimeSpent","setDayOff","dayOff","unsetDayOff","metaInfo","title","watch","component"],"mappings":"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","file":"js/chunk-7545069a.8dbfacba.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Person.vue?vue&type=style&index=0&id=7ed25ee0&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"page\",staticClass:\"columns fixed-page\"},[_c('div',{staticClass:\"column main-column\"},[_c('div',{staticClass:\"person page\"},[_c('div',{ref:\"header\",staticClass:\"flexrow page-header\"},[(_vm.person)?_c('div',{staticClass:\"flexrow-item\"},[_c('people-avatar',{attrs:{\"person\":_vm.person,\"size\":80,\"font-size\":30,\"is-text\":false}})],1):_vm._e(),_c('div',{staticClass:\"flexrow-item\"},[_c('page-title',{attrs:{\"text\":_vm.person ? _vm.person.name : ''}})],1)]),_c('div',{ref:\"tabs\",staticClass:\"task-tabs tabs\"},[(_vm.person)?_c('ul',[_c('li',{class:{'is-active': _vm.isActiveTab('todos')}},[_c('router-link',{attrs:{\"to\":{\n              name: 'person',\n              params: {\n                person_id: _vm.person.id\n              }\n            }}},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.current'))+\" \")])],1),_c('li',{class:{'is-active': _vm.isActiveTab('done')}},[_c('router-link',{attrs:{\"to\":{\n              name: 'person-tab',\n              params: {\n                tab: 'done',\n                person_id: _vm.person.id\n              }\n            }}},[_vm._v(\" \"+_vm._s(_vm.$t('tasks.done'))+\" (\"+_vm._s(_vm.displayedPersonDoneTasks.length)+\") \")])],1),(_vm.isCurrentUserManager)?_c('li',{class:{'is-active': _vm.isActiveTab('timesheets')}},[_c('router-link',{attrs:{\"to\":{\n              name: 'person-tab',\n              params: {\n                tab: 'timesheets',\n                person_id: _vm.person.id\n              }\n            }}},[_vm._v(\" \"+_vm._s(_vm.$t('timesheets.title'))+\" \")])],1):_vm._e(),_c('li',{class:{'is-active': _vm.isActiveTab('schedule')}},[_c('router-link',{attrs:{\"to\":{\n              name: 'person-tab',\n              params: {\n                tab: 'schedule',\n                person_id: _vm.person.id\n              }\n            }}},[_vm._v(\" \"+_vm._s(_vm.$t('schedule.title'))+\" \")])],1)]):_vm._e()]),_c('div',{ref:\"search\",staticClass:\"flexrow\"},[(!_vm.isActiveTab('done'))?_c('search-field',{ref:\"person-tasks-search-field\",class:{\n            'search-field': true,\n            'flexrow-item': true\n          },attrs:{\"can-save\":true},on:{\"change\":_vm.onSearchChange,\"save\":_vm.saveSearchQuery}}):_vm._e(),_c('span',{staticClass:\"filler\"}),_c('combobox',{staticClass:\"flexrow-item\",attrs:{\"label\":_vm.$t('main.sorted_by'),\"options\":_vm.sortOptions,\"locale-key-prefix\":\"tasks.fields.\"},model:{value:(_vm.currentSort),callback:function ($$v) {_vm.currentSort=$$v},expression:\"currentSort\"}})],1),_c('div',{ref:\"query\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isActiveTab('todos') || _vm.isActiveTab('timesheets')),expression:\"isActiveTab('todos') || isActiveTab('timesheets')\"}],staticClass:\"query-list\"},[_c('search-query-list',{attrs:{\"queries\":_vm.personTaskSearchQueries},on:{\"change-search\":_vm.changeSearch,\"remove-search\":_vm.removeSearchQuery}})],1)]),(_vm.isActiveTab('todos'))?_c('todos-list',{ref:\"task-list\",attrs:{\"tasks\":_vm.sortedTasks,\"is-loading\":_vm.isTasksLoading,\"is-error\":_vm.isTasksLoadingError,\"selection-grid\":_vm.personTaskSelectionGrid},on:{\"scroll\":_vm.setPersonTasksScrollPosition}}):_vm._e(),(_vm.isActiveTab('done'))?_c('todos-list',{ref:\"done-list\",attrs:{\"tasks\":_vm.displayedPersonDoneTasks,\"is-loading\":_vm.isTasksLoading,\"is-error\":_vm.isTasksLoadingError,\"done\":true,\"selectionGrid\":_vm.personTaskSelectionGrid}}):_vm._e(),(_vm.isActiveTab('timesheets'))?_c('timesheet-list',{attrs:{\"tasks\":_vm.loggablePersonTasks,\"done-tasks\":_vm.loggableDoneTasks,\"is-loading\":_vm.isTasksLoading,\"is-error\":_vm.isTasksLoadingError,\"time-spent-map\":_vm.personTimeSpentMap,\"time-spent-total\":_vm.personTimeSpentTotal,\"hide-done\":_vm.personTasksSearchText.length > 0},on:{\"date-changed\":_vm.onDateChanged,\"time-spent-change\":_vm.onTimeSpentChange,\"set-day-off\":_vm.onSetDayOff,\"unset-day-off\":_vm.onUnsetDayOff}}):_vm._e(),(_vm.isActiveTab('schedule'))?_c('div',[(_vm.scheduleItems.length > 0)?_c('schedule',{ref:\"schedule-widget\",attrs:{\"start-date\":_vm.tasksStartDate,\"end-date\":_vm.tasksEndDate,\"hierarchy\":_vm.scheduleItems,\"zoom-level\":2,\"height\":_vm.scheduleHeight,\"is-loading\":_vm.isTasksLoading,\"is-estimation-linked\":true,\"with-milestones\":false}}):_c('div',{staticClass:\"has-text-centered\"},[_vm._v(\" There is no tasks scheduled for current person. \")])],1):_vm._e()],1)]),(_vm.nbSelectedTasks === 1)?_c('div',{staticClass:\"column side-column\"},[_c('task-info',{attrs:{\"task\":_vm.selectedTasks.values().next().value}})],1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div ref=\"page\" class=\"columns fixed-page\">\n  <div class=\"column main-column\">\n    <div class=\"person page\">\n\n      <div ref=\"header\" class=\"flexrow page-header\">\n        <div class=\"flexrow-item\" v-if=\"person\">\n          <people-avatar\n            :person=\"person\"\n            :size=\"80\"\n            :font-size=\"30\"\n            :is-text=\"false\"\n          />\n        </div>\n        <div class=\"flexrow-item\">\n          <page-title :text=\"person ? person.name : ''\" />\n        </div>\n      </div>\n\n      <div ref=\"tabs\" class=\"task-tabs tabs\">\n        <ul v-if=\"person\">\n          <li\n            :class=\"{'is-active': isActiveTab('todos')}\"\n          >\n            <router-link :to=\"{\n              name: 'person',\n              params: {\n                person_id: person.id\n              }\n            }\">\n              {{ $t('tasks.current')}}\n            </router-link>\n          </li>\n          <li\n            :class=\"{'is-active': isActiveTab('done')}\"\n          >\n            <router-link :to=\"{\n              name: 'person-tab',\n              params: {\n                tab: 'done',\n                person_id: person.id\n              }\n            }\">\n              {{ $t('tasks.done') }} ({{ displayedPersonDoneTasks.length }})\n            </router-link>\n          </li>\n          <li\n            :class=\"{'is-active': isActiveTab('timesheets')}\"\n            v-if=\"isCurrentUserManager\"\n          >\n            <router-link :to=\"{\n              name: 'person-tab',\n              params: {\n                tab: 'timesheets',\n                person_id: person.id\n              }\n            }\">\n              {{ $t('timesheets.title') }}\n            </router-link>\n          </li>\n          <li\n            :class=\"{'is-active': isActiveTab('schedule')}\"\n          >\n            <router-link :to=\"{\n              name: 'person-tab',\n              params: {\n                tab: 'schedule',\n                person_id: person.id\n              }\n            }\">\n              {{ $t('schedule.title')}}\n            </router-link>\n          </li>\n        </ul>\n      </div>\n\n      <div ref=\"search\" class=\"flexrow\">\n        <search-field\n          :class=\"{\n            'search-field': true,\n            'flexrow-item': true\n          }\"\n          ref=\"person-tasks-search-field\"\n          @change=\"onSearchChange\"\n          @save=\"saveSearchQuery\"\n          :can-save=\"true\"\n          v-if=\"!isActiveTab('done')\"\n        />\n        <span class=\"filler\"></span>\n        <combobox\n          class=\"flexrow-item\"\n          :label=\"$t('main.sorted_by')\"\n          :options=\"sortOptions\"\n          locale-key-prefix=\"tasks.fields.\"\n          v-model=\"currentSort\"\n        />\n      </div>\n\n      <div\n        ref=\"query\"\n      >\n        <div\n          class=\"query-list\"\n          v-show=\"isActiveTab('todos') || isActiveTab('timesheets')\"\n        >\n          <search-query-list\n            :queries=\"personTaskSearchQueries\"\n            @change-search=\"changeSearch\"\n            @remove-search=\"removeSearchQuery\"\n          />\n        </div>\n      </div>\n\n      <todos-list\n        ref=\"task-list\"\n        :tasks=\"sortedTasks\"\n        :is-loading=\"isTasksLoading\"\n        :is-error=\"isTasksLoadingError\"\n        :selection-grid=\"personTaskSelectionGrid\"\n        @scroll=\"setPersonTasksScrollPosition\"\n        v-if=\"isActiveTab('todos')\"\n      />\n\n      <todos-list\n        ref=\"done-list\"\n        :tasks=\"displayedPersonDoneTasks\"\n        :is-loading=\"isTasksLoading\"\n        :is-error=\"isTasksLoadingError\"\n        :done=\"true\"\n        :selectionGrid=\"personTaskSelectionGrid\"\n        v-if=\"isActiveTab('done')\"\n      />\n\n      <timesheet-list\n        :tasks=\"loggablePersonTasks\"\n        :done-tasks=\"loggableDoneTasks\"\n        :is-loading=\"isTasksLoading\"\n        :is-error=\"isTasksLoadingError\"\n        :time-spent-map=\"personTimeSpentMap\"\n        :time-spent-total=\"personTimeSpentTotal\"\n        :hide-done=\"personTasksSearchText.length > 0\"\n        @date-changed=\"onDateChanged\"\n        @time-spent-change=\"onTimeSpentChange\"\n        @set-day-off=\"onSetDayOff\"\n        @unset-day-off=\"onUnsetDayOff\"\n        v-if=\"isActiveTab('timesheets')\"\n      />\n\n      <div\n        v-if=\"isActiveTab('schedule')\"\n      >\n        <schedule\n          ref=\"schedule-widget\"\n          :start-date=\"tasksStartDate\"\n          :end-date=\"tasksEndDate\"\n          :hierarchy=\"scheduleItems\"\n          :zoom-level=\"2\"\n          :height=\"scheduleHeight\"\n          :is-loading=\"isTasksLoading\"\n          :is-estimation-linked=\"true\"\n          :with-milestones=\"false\"\n          v-if=\"scheduleItems.length > 0\"\n        />\n        <div class=\"has-text-centered\" v-else>\n          There is no tasks scheduled for current person.\n        </div>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"column side-column\"\n    v-if=\"nbSelectedTasks === 1\"\n  >\n    <task-info\n      :task=\"selectedTasks.values().next().value\"\n    />\n  </div>\n</div>\n</template>\n\n<script>\nimport moment from 'moment-timezone'\nimport firstBy from 'thenby'\nimport { mapGetters, mapActions } from 'vuex'\n\nimport { formatListMixin } from '@/components/mixins/format'\nimport colors from '@/lib/colors'\nimport {\n  getFirstStartDate,\n  getLastEndDate,\n  parseDate\n} from '@/lib/time'\n\nimport Combobox from '../widgets/Combobox'\nimport PageTitle from '../widgets/PageTitle'\nimport PeopleAvatar from '../widgets/PeopleAvatar'\nimport Schedule from './schedule/Schedule'\nimport SearchField from '../widgets/SearchField'\nimport SearchQueryList from '../widgets/SearchQueryList'\nimport TimesheetList from '../lists/TimesheetList'\nimport TodosList from '../lists/TodosList'\nimport TaskInfo from '../sides/TaskInfo'\n\nexport default {\n  name: 'person',\n  mixins: [formatListMixin],\n  components: {\n    Combobox,\n    PageTitle,\n    PeopleAvatar,\n    Schedule,\n    SearchField,\n    SearchQueryList,\n    TaskInfo,\n    TodosList,\n    TimesheetList\n  },\n\n  data () {\n    return {\n      activeTab: 'todos',\n      currentSort: 'entity_name',\n      isTasksLoading: false,\n      isTasksLoadingError: false,\n      person: null,\n      scheduleHeight: 0,\n      selectedDate: moment().format('YYYY-MM-DD'),\n      sortOptions: [\n        'entity_name',\n        'priority',\n        'task_status_short_name',\n        'estimation',\n        'due_date',\n        'last_comment_date'\n      ].map((name) => ({ label: name, value: name }))\n    }\n  },\n\n  mounted () {\n    this.updateActiveTab()\n    if (this.personTasksSearchText.length > 0) {\n      this.searchField.setValue(this.personTasksSearchText)\n    }\n    setTimeout(() => {\n      if (this.searchField) this.searchField.focus()\n    }, 100)\n    this.loadPerson(this.$route.params.person_id)\n    window.addEventListener('resize', this.resetScheduleHeight)\n  },\n\n  afterDestroy () {\n    window.removeEventListener('resize', this.resetScheduleHeight)\n    this.$store.commit(\n      'LOAD_PERSON_TASKS_END',\n      { tasks: [], userFilters: {}, taskTypeMap: this.taskTypeMap }\n    )\n  },\n\n  computed: {\n    ...mapGetters([\n      'displayedPersonTasks',\n      'displayedPersonDoneTasks',\n      'isCurrentUserManager',\n      'nbSelectedTasks',\n      'personMap',\n      'personTasksScrollPosition',\n      'personTasksSearchText',\n      'personTaskSearchQueries',\n      'personTaskSelectionGrid',\n      'personTimeSpentMap',\n      'personTimeSpentTotal',\n      'productionMap',\n      'selectedTasks',\n      'taskTypeMap'\n    ]),\n\n    loggablePersonTasks () {\n      return this.displayedPersonTasks\n        .filter((task) => {\n          return this.taskTypeMap.get(task.task_type_id).allow_timelog\n        })\n    },\n\n    loggableDoneTasks () {\n      return this.displayedPersonDoneTasks\n        .filter((task) => {\n          return this.taskTypeMap.get(task.task_type_id).allow_timelog\n        })\n    },\n\n    searchField () {\n      return this.$refs['person-tasks-search-field']\n    },\n\n    taskList () {\n      return this.$refs['task-list']\n    },\n\n    haveDoneList () {\n      return this.$refs['done-list']\n    },\n\n    sortedTasks () {\n      const isName = this.currentSort === 'entity_name'\n      const tasks = [...this.displayedPersonTasks]\n      if (isName) {\n        return tasks.sort(\n          firstBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('full_entity_name')\n        )\n      } else {\n        return tasks.sort(\n          firstBy(this.currentSort, -1)\n            .thenBy('project_name')\n            .thenBy('task_type_name')\n            .thenBy('entity_name')\n        )\n      }\n    },\n\n    tasksStartDate () {\n      if (this.scheduleItems.length > 0) {\n        return getFirstStartDate(this.scheduleTasks)\n      } else {\n        return moment()\n      }\n    },\n\n    tasksEndDate () {\n      if (this.scheduleItems.length > 0) {\n        return getLastEndDate(this.scheduleTasks)\n      } else {\n        return moment().add(15, 'days')\n      }\n    },\n\n    scheduleTasks () {\n      let children = []\n      this.scheduleItems.forEach(item => {\n        children = children.concat(item.children)\n      })\n      return children\n    },\n\n    scheduleItems () {\n      const rootMap = new Map()\n      this.sortedTasks.forEach(task => {\n        if (!rootMap.get(task.project_id)) {\n          const project = this.productionMap.get(task.project_id)\n          const rootElement = this.buildProjectScheduleItem(project)\n          rootMap.set(task.project_id, rootElement)\n        }\n        const rootElement = rootMap.get(task.project_id)\n        const taskItem = this.buildTaskScheduleItem(rootElement, task)\n        if (taskItem) rootElement.children.push(taskItem)\n      })\n\n      const rootElements = Array.from(rootMap.values())\n      rootElements.forEach(rootElement => {\n        let rootStartDate = moment()\n        let rootEndDate = moment().add('days', 1)\n        let manDays = 0\n        if (rootElement.children.length > 0) {\n          rootStartDate = getFirstStartDate(rootElement.children)\n          rootEndDate = getLastEndDate(rootElement.children)\n        }\n        rootElement.children.forEach(task => {\n          const estimation = this.formatDuration(task.estimation)\n          if (estimation) manDays += task.estimation\n        })\n        Object.assign(rootElement, {\n          startDate: rootStartDate,\n          endDate: rootEndDate,\n          man_days: manDays\n        })\n      })\n      return rootElements\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'loadPersonTasks',\n      'setPersonTasksSearch',\n      'savePersonTasksSearch',\n      'removePersonTasksSearch',\n      'setDayOff',\n      'setPersonTasksScrollPosition',\n      'setTimeSpent',\n      'unsetDayOff'\n    ]),\n\n    resetScheduleHeight () {\n      this.$nextTick(() => {\n        if (this.isActiveTab('schedule')) {\n          const pageHeight = this.$refs.page.offsetHeight\n          const headerHeight = this.$refs.header.offsetHeight\n          const tabsHeight = this.$refs.tabs.offsetHeight\n          const searchHeight = this.$refs.search.offsetHeight\n          const queryHeight = this.$refs.query.offsetHeight\n          this.scheduleHeight =\n            pageHeight - headerHeight - tabsHeight - searchHeight - queryHeight\n          if (this.$refs['schedule-widget']) {\n            this.$refs['schedule-widget'].resetScheduleSize()\n          }\n        }\n      })\n    },\n\n    buildProjectScheduleItem (project) {\n      return {\n        ...project,\n        avatar: true,\n        color: colors.fromString(project.name, true),\n        priority: 1,\n        expanded: true,\n        loading: false,\n        children: [],\n        editable: false\n      }\n    },\n\n    buildTaskScheduleItem (rootElement, task) {\n      let startDate = moment()\n      let endDate\n\n      if (!task.start_date && !task.real_start_date &&\n          !task.due_date && !task.end_date) return null\n\n      if (task.start_date) {\n        startDate = parseDate(task.start_date)\n      } else if (task.real_start_date) {\n        startDate = parseDate(task.real_start_date)\n      }\n\n      const estimation = this.formatDuration(task.estimation)\n      if (task.due_date) {\n        endDate = parseDate(task.due_date)\n      } else if (task.end_date) {\n        endDate = parseDate(task.end_date)\n      } else if (task.estimation) {\n        endDate = startDate.clone().add(estimation, 'days')\n      }\n\n      if (!endDate || endDate.isBefore(startDate)) {\n        endDate = startDate.clone().add(1, 'days')\n      }\n      const taskType = this.taskTypeMap.get(task.task_type_id)\n      return {\n        ...task,\n        name: task.full_entity_name + ' / ' + taskType.name,\n        startDate: startDate,\n        endDate: endDate,\n        expanded: false,\n        loading: false,\n        man_days: estimation,\n        editable: false,\n        unresizable: false,\n        parentElement: rootElement,\n        color: taskType.color,\n        children: []\n      }\n    },\n\n    isActiveTab (tab) {\n      return this.activeTab === tab\n    },\n\n    selectTab (tab) {\n      this.activeTab = tab\n      if (this.isActiveTab('todos')) {\n        setTimeout(() => {\n          if (this.searchField) this.searchField.focus()\n        }, 100)\n      }\n    },\n\n    onSearchChange (text) {\n      this.setPersonTasksSearch(text)\n    },\n\n    loadPerson (personId) {\n      this.person = this.personMap.get(personId)\n      this.isTasksLoading = true\n      this.loadPersonTasks({\n        personId: this.person.id,\n        date: this.selectedDate,\n        callback: (err) => {\n          if (err) console.error(err)\n          this.isTasksLoading = false\n          this.isTasksLoadingError = false\n          setTimeout(() => {\n            if (this.taskList) {\n              this.$nextTick(() => {\n                this.taskList.setScrollPosition(\n                  this.personTasksScrollPosition\n                )\n              })\n            }\n            this.resizeHeaders()\n          }, 0)\n        }\n      })\n    },\n\n    resizeHeaders () {\n      this.$nextTick(() => {\n        if (this.taskList) this.taskList.resizeHeaders()\n        if (this.haveDoneList) this.haveDoneList.resizeHeaders()\n      })\n    },\n\n    selectCurrent () {\n      this.activeTab = 'current'\n      setTimeout(() => {\n        this.$refs['person-tasks-search-field'].focus()\n      }, 100)\n    },\n\n    selectDone () {\n      this.activeTab = 'done'\n    },\n\n    changeSearch (searchQuery) {\n      this.$refs['person-tasks-search-field'].setValue(searchQuery.search_query)\n      this.$refs['person-tasks-search-field'].$emit(\n        'change', searchQuery.search_query\n      )\n    },\n\n    saveSearchQuery (searchQuery) {\n      this.savePersonTasksSearch(searchQuery)\n        .then(() => {\n        })\n        .catch((err) => {\n          if (err) console.error(err)\n        })\n    },\n\n    removeSearchQuery (searchQuery) {\n      this.removePersonTasksSearch(searchQuery)\n        .then(() => {\n        })\n        .catch((err) => {\n          if (err) console.error(err)\n        })\n    },\n\n    updateActiveTab () {\n      const availableTabs = ['done', 'timesheets', 'schedule']\n      if (availableTabs.includes(this.$route.params.tab)) {\n        this.activeTab = this.$route.params.tab\n      } else {\n        this.activeTab = 'todos'\n      }\n    },\n\n    onTimeSpentChange (timeSpentInfo) {\n      timeSpentInfo.personId = this.person.id\n      timeSpentInfo.date = this.selectedDate\n      this.setTimeSpent(timeSpentInfo)\n    },\n\n    onDateChanged (date) {\n      this.selectedDate = moment(date).format('YYYY-MM-DD')\n      this.loadPerson(this.person.id)\n    },\n\n    onSetDayOff () {\n      const dayOff = {\n        personId: this.person.id,\n        date: this.selectedDate\n      }\n      this.setDayOff(dayOff)\n    },\n\n    onUnsetDayOff () {\n      const dayOff = {\n        personId: this.person.id,\n        date: this.selectedDate\n      }\n      this.unsetDayOff(dayOff)\n    }\n  },\n\n  metaInfo () {\n    return {\n      title: this.person ? `${this.person.name} - Kitsu` : '... - Kitsu'\n    }\n  },\n\n  watch: {\n    $route () {\n      const personId = this.$route.params.person_id\n\n      this.updateActiveTab()\n      if (this.person.id !== personId) this.loadPerson()\n    },\n\n    activeTab () {\n      this.resetScheduleHeight()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.name {\n  width: 230px;\n  min-width: 230px;\n}\n\n.page {\n  overflow: hidden;\n}\n\n.email {\n  width: 210px;\n  min-width: 210px;\n}\n.phone {\n  width: 140px;\n  min-width: 140px;\n}\n.skills {\n  width: 250px;\n}\n\n.query-list {\n  margin-top: 1em;\n}\n\n.task-tabs {\n  margin-top: 2em;\n}\n\n.task-tabs ul {\n  margin: 0;\n}\n\n.data-list {\n  margin-top: 0;\n}\n\n.dark .main-column {\n  border-right: 3px solid $grey-strong;\n}\n\n.person {\n  display: flex;\n  flex-direction: column;\n}\n\n.columns {\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n}\n\n.column {\n  overflow-y: auto;\n  padding: 0;\n}\n\n.main-column {\n  border-right: 3px solid $light-grey;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Person.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Person.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Person.vue?vue&type=template&id=7ed25ee0&scoped=true&\"\nimport script from \"./Person.vue?vue&type=script&lang=js&\"\nexport * from \"./Person.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Person.vue?vue&type=style&index=0&id=7ed25ee0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7ed25ee0\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}